package Stack;

import java.util.Stack;

public class CheckOrderedBalancedParentheses {

	public static void main(String[] args) {
		Boolean result = checkForBalancedPrentheses("[{]}");
		System.out.println("Parentheses are balanced? - " + result);
	}

	static Boolean checkForBalancedPrentheses(String s) {
		Stack<Character> stack = new Stack<>();

		for (int i = 0; i < s.length(); i++) {
			// If the current character is a starting bracket (‘(‘ or ‘{‘ or ‘[‘) then push
			// it to stack.
			if (s.charAt(i) == '(' || s.charAt(i) == '{' || s.charAt(i) == '[') {
				stack.push(s.charAt(i));
			} else if (s.charAt(i) == ')') {
				if (stack.isEmpty() || stack.pop() != '(')
					return false;
			} else if (s.charAt(i) == '}') {
				if (stack.isEmpty() || stack.pop() != '{')
					return false;
			} else if (s.charAt(i) == ']') {
				if (stack.isEmpty() || stack.pop() != '[')
					return false;
			}
		}
		return stack.isEmpty();
	}
}